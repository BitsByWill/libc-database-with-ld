#!/bin/bash

# From https://stackoverflow.com/questions/59895/getting-the-source-directory-of-a-bash-script-from-within

SOURCE="${BASH_SOURCE[0]}"
while [ -h "$SOURCE" ]; do # resolve $SOURCE until the file is no longer a symlink
  SCRIPT_DIR="$( cd -P "$( dirname "$SOURCE" )" >/dev/null && pwd )"
  SOURCE="$(readlink "$SOURCE")"
  [[ $SOURCE != /* ]] && SOURCE="$SCRIPT_DIR/$SOURCE" # if $SOURCE was a relative symlink, we need to resolve it relative to the path where the symlink file was located
done
SCRIPT_DIR="$( cd -P "$( dirname "$SOURCE" )" >/dev/null && pwd )"

pushd $SCRIPT_DIR > /dev/null

. common/libc.sh

get_current_ubuntu trusty i386 libc6
get_current_ubuntu trusty amd64 libc6
get_current_ubuntu trusty amd64 libc6-i386
#get_current_ubuntu utopic i386 libc6
#get_current_ubuntu utopic amd64 libc6
#get_current_ubuntu utopic amd64 libc6-i386
#get_current_ubuntu vivid i386 libc6
#get_current_ubuntu vivid amd64 libc6
#get_current_ubuntu vivid amd64 libc6-i386
#get_current_ubuntu wily i386 libc6
#get_current_ubuntu wily amd64 libc6
#get_current_ubuntu wily amd64 libc6-i386
get_current_ubuntu xenial i386 libc6
get_current_ubuntu xenial amd64 libc6
get_current_ubuntu xenial amd64 libc6-i386
#get_current_ubuntu yakkety i386 libc6
#get_current_ubuntu yakkety amd64 libc6
#get_current_ubuntu yakkety amd64 libc6-i386
#get_current_ubuntu zesty i386 libc6
#get_current_ubuntu zesty amd64 libc6
#get_current_ubuntu zesty amd64 libc6-i386
get_current_ubuntu artful i386 libc6
get_current_ubuntu artful amd64 libc6
get_current_ubuntu artful amd64 libc6-i386
get_current_ubuntu bionic i386 libc6
get_current_ubuntu bionic amd64 libc6
get_current_ubuntu bionic amd64 libc6-i386

get_all_ubuntu archive-eglibc http://security.ubuntu.com/ubuntu/pool/main/e/eglibc/
get_all_ubuntu archive-glibc http://security.ubuntu.com/ubuntu/pool/main/g/glibc/
get_all_ubuntu archive-old-eglibc http://old-releases.ubuntu.com/ubuntu/pool/main/e/eglibc/
get_all_ubuntu archive-old-glibc http://old-releases.ubuntu.com/ubuntu/pool/main/g/glibc/

popd > /dev/null
