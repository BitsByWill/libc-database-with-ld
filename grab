#!/bin/bash

# From https://stackoverflow.com/questions/59895/getting-the-source-directory-of-a-bash-script-from-within

SOURCE="${BASH_SOURCE[0]}"
while [ -h "$SOURCE" ]; do # resolve $SOURCE until the file is no longer a symlink
  SCRIPT_DIR="$( cd -P "$( dirname "$SOURCE" )" >/dev/null && pwd )"
  SOURCE="$(readlink "$SOURCE")"
  [[ $SOURCE != /* ]] && SOURCE="$SCRIPT_DIR/$SOURCE" # if $SOURCE was a relative symlink, we need to resolve it relative to the path where the symlink file was located
done
SCRIPT_DIR="$( cd -P "$( dirname "$SOURCE" )" >/dev/null && pwd )"

pushd $SCRIPT_DIR > /dev/null

if [[ $# < 2 ]]; then
  echo >&2 "Usage: $0 id path_to_copy"
  exit 2
fi
id=$1
pathcopy=$2

if [ ! -d "$pathcopy" ]; then
    echo "Error: directory to copy to does not exist."
    exit 2
fi

if ! [ -f "db/$id.so" ] || ! [ -f "db/$id.ld" ]; then
    echo "Error: cannot find files for $id."
    exit 2
fi

cp --interactive db/$id.ld $pathcopy/libc.so.6
cp --interactive db/$id.so $pathcopy/ld-linux.so.2

popd > /dev/null
